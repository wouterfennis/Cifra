@page "/spreadsheet"
@using Cifra.Api.Client
@inject ICifraApiClient Client
@inject NavigationManager NavManager
@inject IJSRuntime JS

<PageTitle>Create spreadsheet</PageTitle>
if(createTestResultsSpreadsheetRequest.Metadata != null){
<div class="container">
    <div class="row">
        <div class="col-3">
            <h1>Create spreadsheet</h1>
        </div>
    </div>
    <div class="row">
        <EditForm Model="@createTestResultsSpreadsheetRequest" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row">
                <div class="form-group col-3">
                    <label for="name">Class</label>
                    <InputSelect @bind-Value="createTestResultsSpreadsheetRequest.ClassId">
                        @foreach (var retrievedClass in classes)
                        {
                            <option value="@retrievedClass.Id">@retrievedClass.Name</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-3">
                    <label for="name">Test</label>
                    <InputSelect @bind-Value="createTestResultsSpreadsheetRequest.TestId">
                        @foreach (var retrievedTest in tests)
                        {
                            <option value="@retrievedTest.Id">@retrievedTest.Name</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-3">
                    <label for="name">Title</label>
                    <InputText id="name" class="form-control" placeholder="H1a" @bind-Value="createTestResultsSpreadsheetRequest.Metadata.Title" />
                </div>
            </div>

            <div class="row">
                <div class="form-group col-3">
                    <label for="name">FileName</label>
                    <InputText id="name" class="form-control" placeholder="H1a" @bind-Value="createTestResultsSpreadsheetRequest.Metadata.FileName" />
                </div>
            </div>

            <div class="row mt-2">
                <div class="col-1">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
}

@code {
    private Api.Client.CreateTestResultsSpreadsheetRequest createTestResultsSpreadsheetRequest = new Api.Client.CreateTestResultsSpreadsheetRequest();
    private IEnumerable<Api.Client.Class> classes = new List<Class>();
    private IEnumerable<Api.Client.Test> tests = new List<Test>();

    protected override async Task OnInitializedAsync()
    {
        createTestResultsSpreadsheetRequest.Metadata = new Metadata();
        var getClassesResponse = await Client.ClassGETAsync("1");
        classes = getClassesResponse.Classes;
        var getTestsResponse = await Client.TestGETAsync("1");
        tests = getTestsResponse.Tests;
        await base.OnInitializedAsync();
    }

    private async Task HandleValidSubmit()
    {
        var response = await Client.TestResultSpreadsheetAsync("1", createTestResultsSpreadsheetRequest);
        var fileName = "log.bin";

        using var streamRef = new DotNetStreamReference(stream: response.Stream);

        await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
    }
}